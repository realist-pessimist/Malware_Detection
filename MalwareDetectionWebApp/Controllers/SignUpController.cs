using System.Threading.Tasks;
using MalwareDetectionWebApp.DTO;
using MalwareDetectionWebApp.Models;
using Microsoft.AspNetCore.Identity;
using Microsoft.AspNetCore.Mvc;

namespace MalwareDetectionWebApp.Controllers
{
    [ApiController]
    [Route("signUp")]
    public class SignUpController : ControllerBase
    {
        private readonly UserManager<User> _userManager;
        private readonly RoleManager<IdentityRole<int>> _roleManager;

        public SignUpController(UserManager<User> userManager, RoleManager<IdentityRole<int>> roleManager)
        {
            _userManager = userManager;
            _roleManager = roleManager;
        }

        [HttpPost]
        [Route("")]
        public async Task<ActionResult> Post([FromBody] RegistrationDTO registrationDTO)
        {
            var user = await _userManager.FindByEmailAsync(registrationDTO.Email);
            if (user ! is null)
            {
                return BadRequest();
            }

            user = new User
            {
                Email = registrationDTO.Email,
                UserName = registrationDTO.Email,
                Name = registrationDTO.Name,
                EmailConfirmed = true,
                PhoneNumber = registrationDTO.Phone
            };
            var createResult = await _userManager.CreateAsync(user, registrationDTO.Password);
            if (!createResult.Succeeded)
            {
                return BadRequest();
            }

            var addToRoleResult = await
                _userManager.AddToRoleAsync(user, "user");

            if (!addToRoleResult.Succeeded)
            {
                return BadRequest();
            }
            return Ok();
        }
    }
}